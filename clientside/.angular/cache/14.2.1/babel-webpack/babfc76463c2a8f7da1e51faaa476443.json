{"ast":null,"code":"import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/token-storage.service\";\nconst TOKEN_HEADER_KEY = 'Authorization';\nexport let AuthInterceptorService = /*#__PURE__*/(() => {\n  class AuthInterceptorService {\n    constructor(tokenService) {\n      this.tokenService = tokenService;\n    }\n\n    intercept(req, next) {\n      let authRequest = req;\n      const token = this.tokenService.getToken();\n\n      if (token != null) {\n        authRequest = req.clone({\n          headers: req.headers.set(TOKEN_HEADER_KEY, token)\n        });\n      }\n\n      return next.handle(authRequest);\n    }\n\n  }\n\n  AuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n    return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.TokenStorageService));\n  };\n\n  AuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptorService,\n    factory: AuthInterceptorService.ɵfac\n  });\n  return AuthInterceptorService;\n})();\nexport const authInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptorService,\n  multi: true\n}];","map":null,"metadata":{},"sourceType":"module"}